"use strict";var jsdev={isElement:e=>{function t(e){if(e instanceof Node||e instanceof NodeList||e instanceof HTMLElement||e instanceof HTMLCollection)return!0}let n=!1;return t(e)?n=!0:Array.isArray(e)&&t(e[0])&&(n=!0),n},isObject:e=>"[object Object]"==Object.prototype.toString.call(e),getElementRefs:(e,t)=>{const n={container:document,multiple:!0,...t};return"string"==typeof e?1==n.multiple?n.container.querySelectorAll(e):n.container.querySelector(e):jsdev.isElement(e)&&(e instanceof NodeList||Array.isArray(e))?1==n.multiple?e:e[0]:jsdev.isElement(e)?1==n.multiple?[e]:e:void 0},randInt:(e,t)=>Math.floor(Math.random()*(t+1-e)+e),randFloat:(e,t)=>Math.random()*(t-e)+e,postFormData:e=>{const t={POST:[],GET:[],action:"",...e},n=document.createElement("form");n.method="POST";const r=t.POST.length,s=document.createElement("input");for(let e=0;e<r;++e){const r=s.cloneNode(!1);r.name=t.POST[e].name,r.value=t.POST[e].value,n.append(r)}let a="",o=t.GET.length;for(let e=0;e<o;e++)0==e&&(a+="?"),a+=e>0?`&${t.GET[e].name}=${t.GET[e].value}`:`${t.GET[e].name}=${t.GET[e].value}`;n.action=`${t.action}${a}`,document.getElementsByTagName("body")[0].append(n),n.submit()},unsavedChanges:{unSavedChanges:!1,elemRefs:[],setUnsaved:()=>{jsdev.unsavedChanges.unSavedChanges=!0},listen:e=>{const t={containers:"body",inputTypes:"input:not([type='submit']):not([type='reset']):not([disabled]), textarea:not([disabled])",...e};window.addEventListener("beforeunload",jsdev.unsavedChanges.checkSaved),jsdev.getElementRefs(t.containers,{multiple:!0}).forEach(e=>{jsdev.getElementRefs(t.inputTypes,{container:e,multiple:!0}).forEach(e=>{e.addEventListener("input",jsdev.unsavedChanges.setUnsaved),jsdev.unsavedChanges.elemRefs.push(e)})})},checkSaved:e=>{if(jsdev.unsavedChanges.unSavedChanges)return e.preventDefault(),e.returnValue="There are unsaved changes on this page, are you sure you want to exit?","There are unsaved changes on this page, are you sure you want to exit?"},destroy:()=>{window.removeEventListener("beforeunload",jsdev.unsavedChanges.checkSaved),jsdev.unsavedChanges.unSavedChanges=!1,jsdev.unsavedChanges.elemRefs.forEach(e=>{e.removeEventListener("input",jsdev.unsavedChanges.setUnsaved)}),jsdev.unsavedChanges.elemRefs.length=0}},intersectionTrigger:(e,t)=>{const n={thresholdIn:.5,thresholdOut:.1,container:null,onTrigger:()=>{},onExit:()=>{},...t},r=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&"false"==e.target.dataset.is_triggered&&(e.target.setAttribute("data-is_triggered","true"),n.onTrigger(e.target))})},{threshold:n.thresholdIn});if(null!=n.thresholdOut){const t=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting||"true"==e.target.dataset.is_triggered&&(e.target.setAttribute("data-is_triggered","false"),n.onExit(e.target))})},{threshold:n.thresholdOut});jsdev.getElementRefs(e,{multiple:!0}).forEach(e=>{t.observe(e)})}jsdev.getElementRefs(e,{multiple:!0}).forEach(e=>{e.setAttribute("data-is_triggered","false"),r.observe(e)})},lazyLoad:(e,t)=>{const n={threshold:.1,tempSrcAttribute:"data-src",targetSrcAttribute:"src",checkImages:!0,container:null,onLoad:()=>{},onError:()=>{},...t},r=new IntersectionObserver(e=>{e.forEach(e=>{if(e.isIntersecting)if(r.unobserve(e.target),n.checkImages){const t=new Image;t.src=e.target.getAttribute(n.tempSrcAttribute),t.complete?(e.target.setAttribute(n.targetSrcAttribute,e.target.getAttribute(n.tempSrcAttribute)),n.onLoad(e.target)):(t.onload=(()=>{e.target.setAttribute(n.targetSrcAttribute,e.target.getAttribute(n.tempSrcAttribute)),n.onLoad(e.target)}),t.onerror=(()=>{n.onError(e.target)}))}else e.target.setAttribute(n.targetSrcAttribute,e.target.getAttribute(n.tempSrcAttribute)),e.target.onload=(()=>{n.onLoad(e.target)})})},{threshold:n.threshold,root:null==n.container?null:jsdev.getElementRefs(n.container,{multiple:!1})});jsdev.getElementRefs(e,{multiple:!0}).forEach(e=>{r.observe(e)})},getUUID:()=>([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16)),GETValues:()=>{const e=new URLSearchParams(window.location.search),t={};for(const n of e.keys())t[n]=e.get(n);return t},elemStyles:function(e,t){const n=t.split(";");n.pop();const r=[];n.forEach(e=>{const t=e.split(":");if(/-/gi.test(t[0])){const e=t[0].split("-");let n=e[1].slice(1);t[0]=e[0]+e[1].charAt(0).toUpperCase()+n}r[r.length]=[t[0].trim(),t[1].trim()]}),r.forEach(t=>{e.style[t[0]]=t[1]})},wordCount:function(e){return/[0-9a-z]{1,}/gi.test(e)?e.match(/[0-9a-z]{1,}/gi).length:0},wordsToUpperCase:function(e){return e.replace(/[a-z]{1,}(?!\w)/gi,e=>{let t=e.slice(1),n=e.charAt(0).toUpperCase();return n+t})},sortRandom:function(e){const t=e.length,n=[],r=[];for(let e=0;e<t;e++)n.push(e);for(let s=0;s<t;s++){const t=Math.floor(Math.random()*(n.length-0)+0);r.push(e[n[t]]),n.splice(t,1)}return r}};